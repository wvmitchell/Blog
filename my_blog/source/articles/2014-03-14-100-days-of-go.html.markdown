---
title: 100 Days of Go
date: 2014-03-14 16:12 UTC
tags:
---

Sitting at Denver.rb a few nights ago, I listened as my friend and mentor Jeff
Casimir gave a talk on the always exciting topic of TDD. When someone asked
a question regarding testing Javascript, Jeff happened to mention that he was
undergoing 100 days of Javascript, a simple, self imposed, challenge of working
with the language a little bit every day for 100 consecutive.

I thought to myself, 'what a great idea!'. So, I submit that I'm going to take
part in my own self imposed challenge, 100 days of Go. And what challenge would
be complete without some simple rules?

  1) Every day must see no less than one github commit where Go is the dominant
  language

  2) At least one of the daily commits must be to an open-source, public
  repository.

I can't think of much else to really bound my learning here, seems like
a straightforward enough goal. In the past, whenever I wanted to start learning
a new language, one of the barriers I quickly encountered was 'What am
I supposed to make?' While I admit that this is still a challenge I face, I've
got a good idea of where to get a start here. [Go By
Example](http://www.gobyexample.com) has some great resources for understanding
the building blocks of the language. Also, I'm intending to use
[Exercism.io](http://www.exercism.io) to gain a better understanding of TDD in
Go.

So what do you think? Would you care to join me on this journey?

